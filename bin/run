#!/usr/bin/env node

import { resolve } from 'node:path';
import { fileURLToPath } from 'node:url';
import { spawn } from 'node:child_process';
import chalk from 'chalk';


// Constants

export const VITE_FILE_URL = import.meta.url;


// Variables

export const dir = fileURLToPath(VITE_FILE_URL);

export const viteRoot = resolve(dir, '../..');

export const viteConfigFilename = resolve(dir, '../../vite.config.ts');


// Functions

export function log(message, color = 'blue') {
    const handle = chalk[color] ?? chalk.green;

    if (!handle) {
        console.log(chalk.yellow(`(!) Paris Internal Error: Unknown color '${color}'`))
        console.log(message);

        return;
    }

    console.log(handle(message));
}

export function msg(message, color = 'green') {
    log('(+) ' + message, color);
}

export function err(message, color = 'red') {
    log('(!) ' + message, color);
}

export function use() {
    return new Promise((resolve, reject) => {

        // Getting the vite server

        const vite = spawn('vite', [ viteRoot, '--config', viteConfigFilename ]);


        // Handling the data

        vite.stdout.on('data', data => log(data));


        // Handling the errors

        vite.stderr.setEncoding('utf-8');
        vite.stderr.on('data', message => reject(message));


        // Handling the exit

        vite.on('close', code => resolve(code));


        // Logging the message

        msg('Paris: Server started');
    })
}


use().catch(message => err('Paris: ' + message));
